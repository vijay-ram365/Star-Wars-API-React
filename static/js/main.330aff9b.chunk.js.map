{"version":3,"sources":["components/Card.js","components/SearchBar.js","App.js","index.js"],"names":["Card","props","starWarsData","htmlData","map","item","index","React","createElement","className","key","name","model","manufacturer","console","log","SearchBar","onChange","e","childToParent","target","value","id","defaultValue","disabled","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","_useState","useState","_useState2","_slicedToArray","setStarWarsData","_useState3","_useState4","searchData","setSearchData","fetchStarWarsData","_ref","_asyncToGenerator","_callee","response","_context","fetch","concat","toString","ok","json","apply","arguments","useEffect","res","results","message","Fragment","childdata","href","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.330aff9b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  // data not available on first run causing error, if check applied\n  if (props.starWarsData) {\n    const htmlData = props.starWarsData.map((item, index) => {\n      return (\n        <div className=\"card\" key={index}>\n          <h3>{item.name}</h3>\n          <p>Model: {item.model}</p>\n          <small>Manufacturer: {item.manufacturer}</small>\n        </div>\n      );\n    });\n    return <div className=\"card-grid\">{htmlData}</div>;\n  } else {\n    console.log(\"No Data...Yet\");\n  }\n};\n\nexport default Card;\n","import React from \"react\";\n\nconst SearchBar = (props) => {\n  return (\n    <div>\n      <h1>The Star Wars API</h1>\n      <h2>Make A Selection:</h2>\n      <select\n        onChange={(e) => {\n          props.childToParent(e.target.value);\n        }} // gets lifted to App component\n        name=\"selectList\"\n        id=\"selectList\"\n        defaultValue=\"default\"\n      >\n        <option value=\"default\" disabled>\n          Make a selection\n        </option>\n        <option value=\"starships\">Starships</option>\n        <option value=\"vehicles\">Land Vehicles</option>\n      </select>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Card from \"./components/Card\";\nimport SearchBar from \"./components/SearchBar\";\n\nfunction App() {\n  // data to pass to Card Component\n  const [starWarsData, setStarWarsData] = useState([]);\n  // data from Search Bar\n  const [searchData, setSearchData] = useState(\"\");\n  const childToParent = (childdata) => {\n    setSearchData(childdata);\n  };\n\n  // data from Star Wars API\n  const fetchStarWarsData = async () => {\n    const response =\n      await fetch(`https://swapi.dev/api/${searchData.toString()}/\n    `);\n    if (!response.ok) {\n      throw new Error(\"Data Not Available\");\n    } else {\n      return response.json();\n    }\n  };\n\n  useEffect(() => {\n    fetchStarWarsData()\n      .then((res) => {\n        setStarWarsData(res.results);\n      })\n      .catch((e) => {\n        console.log(e.message);\n      });\n  }, [searchData]); // rerender on selection changes\n\n  return (\n    <>\n      <SearchBar childToParent={childToParent} />\n      <Card starWarsData={starWarsData} />\n      <a href=\"https://swapi.dev/\" target=\"/\">\n        Link to the Star Wars API\n      </a>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}